{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Coursera\\\\Web\\\\2)frontEnd-React\\\\confusion\\\\src\\\\components\\\\DishdetailComponents.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, Col, Nav, NavItem, ModalBody, Label, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isNavOpen: false,\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \" Submit Comments\"), React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Submit Comment\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Rating\")), React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"5\")))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Your Name\"), React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".yourname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"submit\",\n      className: \"bg-primary\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nfunction RenderDish({\n  dish\n}) {\n  return React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: baseUrl + dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, dish.description))));\n}\n\nfunction RenderComments({\n  comments,\n  addComment,\n  dishId\n}) {\n  if (comments != null) {\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, comments.map(comment => {\n      return React.createElement(\"li\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, comment.comment), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date)))));\n    })), React.createElement(CommentForm, {\n      dishId: dishId,\n      addComment: addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    });\n  }\n}\n\nconst DishDetail = props => {\n  if (props.isLoading) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })));\n  } else if (props.errMess) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, props.errMess)));\n  } else if (props.dish != null) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Menu\")), React.createElement(BreadcrumbItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, props.dish.name)), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, props.dish.name), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(RenderDish, {\n      dish: props.dish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(RenderComments, {\n      comments: props.comments,\n      addComment: props.addComment,\n      dishId: props.dish.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    });\n  }\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["D:\\study\\Coursera\\Web\\2)frontEnd-React\\confusion\\src\\components\\DishdetailComponents.js"],"names":["React","Component","Card","CardImg","CardBody","CardText","CardTitle","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","Col","Nav","NavItem","ModalBody","Label","Row","Link","Control","LocalForm","Errors","Loading","baseUrl","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isNavOpen","isModalOpen","toggleModal","bind","handleSubmit","setState","values","addComment","dishId","rating","author","comment","render","RenderDish","dish","image","name","description","RenderComments","comments","map","id","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","isLoading","errMess"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle,Breadcrumb,BreadcrumbItem,Button,Modal, ModalHeader,Col,Nav,NavItem, ModalBody, Label,  Row } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nconst required = (val) => (val) && (val.length);\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isNavOpen:false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n \r\ntoggleModal() {\r\n    this.setState({\r\n        isModalOpen: !this.state.isModalOpen\r\n    });\r\n}\r\n\r\nhandleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n}\r\n\r\nrender() {\r\n  return (\r\n        <div>\r\n        <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comments</Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader  toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n\r\n              <LocalForm onSubmit={(values) => this.handleSubmit(values)}>  \r\n                  <Row className=\"form-group\">\r\n                      <Col md={12}>\r\n                      <Label htmlFor=\"rating\">Rating</Label>\r\n                      </Col>\r\n                      <Col md={12}>\r\n                          <Control.select model=\".rating\" name=\"rating\" \r\n                              className=\"form-control\">\r\n                              <option>1</option>\r\n                              <option>2</option>\r\n                              <option>3</option>\r\n                              <option>4</option>\r\n                              <option>5</option>\r\n                          </Control.select>\r\n                     </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                       <Col>\r\n                          <Label htmlFor=\"name\">Your Name</Label>\r\n                          <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                              placeholder=\"Your Name\"\r\n                              className=\"form-control\"\r\n                              validators={{\r\n                                  required, minLength: minLength(3), maxLength: maxLength(15)\r\n                              }}\r\n                          />\r\n                          <Errors\r\n                              className=\"text-danger\"\r\n                              model=\".yourname\"\r\n                              show=\"touched\"\r\n                              messages={{\r\n                                  required: 'Required',\r\n                                  minLength: 'Must be greater than 2 characters',\r\n                                  maxLength: 'Must be 15 characters or less'\r\n                              }}\r\n                          />\r\n                        </Col>\r\n                  </Row>\r\n                  <Row className=\"form-group\">\r\n                      <Col>\r\n                          <Label htmlFor=\"comment\">Comment</Label>\r\n                          <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                              rows=\"6\" className=\"form-control\" />\r\n                      </Col>\r\n                         \r\n                  </Row>\r\n                <Button type=\"submit\" className=\"bg-primary\" color=\"primary\">Submit</Button>\r\n              </LocalForm>\r\n            </ModalBody>\r\n        </Modal>\r\n        </div>\r\n        );\r\n}\r\n}\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <Card>\r\n                    <CardImg top src={baseUrl +dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n        );       \r\n    }\r\n\r\n    function RenderComments({comments,addComment, dishId}) {\r\n        if (comments != null) {\r\n            return(\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        {comments.map((comment)=>{\r\n                            return(\r\n                                <li key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <p>-- {comment.author},\r\n                                    &nbsp;\r\n                                    {new Intl.DateTimeFormat('en-US', {\r\n                                            year: 'numeric',\r\n                                            month: 'short',\r\n                                            day: '2-digit'\r\n                                    }).format(new Date(Date.parse(comment.date)))}\r\n                                    </p>\r\n                                </li>\r\n                            );\r\n                        })}                   \r\n                    </ul>\r\n                    <CommentForm dishId={dishId} addComment={addComment} />\r\n               </div>\r\n            );\r\n        }\r\n        else{\r\n            return(<div></div>);\r\n        }\r\n    }\r\n\r\n    const DishDetail = (props)=>{\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n            return (\r\n                <div className=\"container\">\r\n                     <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb> \r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr />\r\n                        </div>  \r\n                    </div>\r\n                    <div  className=\"row\">\r\n                        <RenderDish dish={props.dish}/>\r\n                        <RenderComments comments={props.comments}\r\n                        addComment={props.addComment}\r\n                        dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (<div></div>)\r\n        }\r\n    }\r\nexport default DishDetail"]},"metadata":{},"sourceType":"module"}