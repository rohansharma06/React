{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Coursera\\\\Web\\\\2)frontEnd-React\\\\confusion\\\\src\\\\components\\\\MainComponent.js\";\nimport React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponent';\nimport About from './AboutComponent';\nimport DishDetail from './DishdetailComponents';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreator';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  fetchLeaders: () => {\n    dispatch(fetchLeaders());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset('feedback'));\n  },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  postFeedback: feedback => dispatch(postFeedback(feedback))\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchLeaders();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n  }\n\n  render() {\n    const HomePage = () => {\n      return React.createElement(Home, {\n        dish: this.props.dishes.dishes.filter(dish => dish.featured)[0],\n        dishesLoading: this.props.dishes.isLoading,\n        dishesErrMess: this.props.dishes.errMess,\n        promotion: this.props.promotions.promotions.filter(promo => promo.featured)[0],\n        promoLoading: this.props.promotions.isLoading,\n        promoErrMess: this.props.promotions.errMess,\n        leader: this.props.leaders.leaders.filter(leader => leader.featured)[0],\n        leadersLoading: this.props.leaders.isLoading,\n        leadersErrMess: this.props.leaders.errMess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      });\n    };\n\n    const DishWithId = ({\n      match\n    }) => {\n      return React.createElement(DishDetail, {\n        dish: this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId, 10))[0],\n        isLoading: this.props.dishes.isLoading,\n        errMess: this.props.dishes.errMess,\n        comments: this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10)),\n        commentsErrMess: this.props.comments.errMess,\n        postComment: this.props.postComment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      });\n    };\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(TransitionGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(CSSTransition, {\n      key: this.props.location.key,\n      classNames: \"page\",\n      timeout: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/home\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/aboutus\",\n      component: () => React.createElement(About, {\n        leaders: this.props.leaders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \"} />\", React.createElement(Route, {\n      exact: true,\n      path: \"/menu\",\n      component: () => React.createElement(Menu, {\n        dishes: this.props.dishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/menu/:dishId\",\n      component: DishWithId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/contactus\",\n      component: () => React.createElement(Contact, {\n        resetFeedbackForm: this.props.resetFeedbackForm,\n        postFeedback: this.props.postFeedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: \"/home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["D:\\study\\Coursera\\Web\\2)frontEnd-React\\confusion\\src\\components\\MainComponent.js"],"names":["React","Component","Home","Menu","About","DishDetail","Header","Footer","Contact","Switch","Route","Redirect","withRouter","connect","postComment","fetchDishes","fetchComments","fetchPromos","fetchLeaders","postFeedback","actions","TransitionGroup","CSSTransition","mapStateToProps","state","dishes","comments","promotions","leaders","mapDispatchToProps","dispatch","dishId","rating","author","comment","resetFeedbackForm","reset","feedback","Main","constructor","props","componentDidMount","render","HomePage","filter","dish","featured","isLoading","errMess","promo","leader","DishWithId","match","id","parseInt","params","location","key"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport Home from './HomeComponent' \r\nimport Menu from './MenuComponent';\r\nimport About from './AboutComponent';\r\nimport DishDetail from './DishdetailComponents';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreator';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes())},\r\n  fetchLeaders: () => { dispatch(fetchLeaders())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Main extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n  }  \r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchLeaders();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n  }\r\n \r\n  render(){\r\n    const HomePage = () => {\r\n        return(<Home \r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n          promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />);\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n            />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n"]},"metadata":{},"sourceType":"module"}