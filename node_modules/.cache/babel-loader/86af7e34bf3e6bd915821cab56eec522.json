{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Coursera\\\\Web\\\\2)frontEnd-React\\\\confusion\\\\src\\\\components\\\\DishdetailComponents.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardText, CardTitle } from 'reactstrap';\n\nclass Dishdetail extends Component {\n  renderDish(dish) {\n    if (dish != null) {\n      return React.createElement(\"div\", {\n        className: \"col-12 col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        width: \"100%\",\n        src: dish.image,\n        alt: dish.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, dish.name), React.createElement(CardText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, dish.description))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    }\n  }\n\n  renderComments(comments) {\n    if (comments == null) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    const cmnts = comments.map(comment => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, comment.comment), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"-- \", comment.author, \", \\xA0\", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date))))));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Comments \"), React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, cmnts));\n  }\n\n  render() {\n    const dish = this.props.dish;\n\n    if (dish != null) {\n      const dishItem = this.renderDish(dish);\n      const commentItem = this.renderComments(dish.comments);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, dishItem, commentItem));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nexport default Dishdetail;","map":{"version":3,"sources":["D:\\study\\Coursera\\Web\\2)frontEnd-React\\confusion\\src\\components\\DishdetailComponents.js"],"names":["React","Component","Card","CardImg","CardBody","CardText","CardTitle","Dishdetail","renderDish","dish","image","name","description","renderComments","comments","cmnts","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","render","props","dishItem","commentItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle } from 'reactstrap';\r\n\r\nclass Dishdetail extends Component {\r\n    \r\n    renderDish(dish) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    renderComments(comments) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const cmnts = comments.map(comment => {\r\n            return (\r\n                <div>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author},\r\n                        &nbsp;\r\n                        {new Intl.DateTimeFormat('en-US', {\r\n                                year: 'numeric',\r\n                                month: 'short',\r\n                                day: '2-digit'\r\n                            }).format(new Date(Date.parse(comment.date)))}\r\n                        </p>\r\n                    </li>\r\n                </div>   \r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    {cmnts}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const dish = this.props.dish\r\n        if (dish != null) {\r\n            const dishItem = this.renderDish(dish)\r\n            const commentItem = this.renderComments(dish.comments)\r\n            return (\r\n                <div className=\"container\">\r\n                    <div  className=\"row\">\r\n                        {dishItem}\r\n                        {commentItem}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (<div></div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Dishdetail"]},"metadata":{},"sourceType":"module"}